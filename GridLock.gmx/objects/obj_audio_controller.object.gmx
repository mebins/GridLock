<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var snd = audio_play_sound(bgm_feral_fist,0,1);
scene_controller = instance_find(obj_scene_controller,0);
old_room = room;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room == rm_start_menu)
{
    if(!audio_is_playing(bgm_main_menu))
    {
    audio_stop_sound(bgm_feral_fist);
    snd = audio_play_sound(bgm_main_menu,0,1);
    }
}
if(room == rm_character_selection|| room == rm_maps)
{
    if(audio_is_playing(bgm_main_menu))
    {
        show_debug_message(audio_sound_length(bgm_main_menu)-audio_sound_get_track_position(snd));
        if(audio_sound_length(bgm_main_menu)-audio_sound_get_track_position(snd)&lt; .10)
        {
            audio_stop_sound(bgm_main_menu);
            snd = audio_play_sound(bgm_character_select,0,1);
        }
    }
    if(scene_controller.player_1 != -1)
    {
        if(audio_is_playing(bgm_character_select))
        {
            show_debug_message(audio_sound_length(bgm_character_select)-audio_sound_get_track_position(snd));
            if(audio_sound_length(bgm_character_select)-audio_sound_get_track_position(snd)&lt; .10)
            {   
                audio_stop_sound(bgm_character_select);
                snd = audio_play_sound(bgm_player1_selected,0,1);
            }
        }
    }
    if(scene_controller.player_2 != -1)
    {
        if(audio_is_playing(bgm_player1_selected))
        {
            show_debug_message(audio_sound_length(bgm_player1_selected)-audio_sound_get_track_position(snd));
            if(audio_sound_length(bgm_player1_selected)-audio_sound_get_track_position(snd)&lt; .10)
            {
                audio_stop_sound(bgm_player1_selected);
                snd = audio_play_sound(bgm_player2_selected,0,1);
            }
        }
    }
}
if(room == rm_fight &amp;&amp; old_room != room)
{
    audio_stop_all();
    old_room = room;
    track = choose(bgm_vidarr,bgm_throwing_punches);
    snd = audio_play_sound(track,0,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
